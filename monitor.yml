---
- hosts: monitor
  become: yes
  remote_user: adminfpi
  tasks:

#   - name: Install prerequisites
#     apt: name={{ item }} update_cache=yes force_apt_get=yes
#     loop: [ 'aptitude' ]

# INSTALL JAVA FRED #########################

#   - name: Setup OpenJDK Repository
#     apt_repository:
#       repo: 'ppa:openjdk-r/ppa'
#       state: present
#       update_cache: true

#   - name: Install OpenJDK
#     apt:
#       name:
#         - openjdk-8-jre
#       state: present
#       update_cache: true

#   - name: Set Java Path
#     set_fact:
#       java_path: /usr/lib/jvm/java-1.8.0-openjdk-amd64

# INSTALL JAVA #########################
#
# Set java_package parameter
#

    - name: Debian | Define openjdk java_package
      set_fact:
        java_package: "{{ java.openjdk.debian_package }}"
      when: (java_package|trim == '') and (java_jdk_type == 'openjdk')

    - name: Debian | Define Oracle java_package
      set_fact:
        java_package: "{{ java.oracle.debian_package }}"
      when: (java_package|trim == '') and (java_jdk_type == 'oracle')

#
# Add/Update APT repository
#

    - name: Debian | Add APT repo for openjdk 8
      apt_repository:
        repo: "{{ deb.debian.apt_backports_repo }}"
        state: present
      when: (java_version == '8') and (java_jdk_type == 'openjdk')

    - name: Debian | Install WebUpd8 APT key
      apt_key:
        id: "{{ deb.ubuntu.webupd8_key }}"
        keyserver: "{{ deb.ubuntu.webupd8_keyserver }}"
        state: present
      register: get_webupd8_key
      until: get_webupd8_key|success
      retries: 5
      delay: 10
      when: java_jdk_type == 'oracle'

    - name: Debian | Add WebUpd8 APT repo
      apt_repository:
        repo: "{{ deb.ubuntu.webupd8_repo }}"
        state: present
      when: java_jdk_type == 'oracle'

    - name: Debian | Update APT cache
      apt: update_cache=yes cache_valid_time=86400

#
# Install/Configure Java package(s)
#

    - name: Debian | Accept Oracle Java License
      debconf:
        name: "oracle-java{{ java_version }}-installer"
        question: 'shared/accepted-oracle-license-v1-1'
        value: 'true'
        vtype: 'select'

    - name: Debian | Ensure Java is installed
      apt:
        name: "{{ java_package }}"
        state: installed
      register: install_java_command
      when: java_package|trim != ''

    - name: Debian | Update system openjdk Java version
      alternatives:
        name: java
        path: "/usr/lib/jvm/java-{{ java_version }}-openjdk-amd64/jre/bin/java"
      when: (not install_java_command|skipped) and java_set_as_default and (java_jdk_type == 'openjdk')

    - name: Debian | Update system Oracle Java version
      alternatives:
        name: java
        path: "/usr/lib/jvm/java-{{ java_version }}-oracle/jre/bin/java"
      when: (not install_java_command|skipped) and java_set_as_default and (java_jdk_type == 'oracle')

# INSTALL ElasticSearch #####################################

    - name: Add ElasticSearch Source
      lineinfile:
        path: /etc/apt/sources.list
        line: deb https://artifacts.elastic.co/packages/7.x/apt stable main
        create: yes

    - name: Install ElasticSearch Keys
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: Install ElasticSearch
      apt:
        name:
          - elasticsearch
        state: present

    - name: Add ElasticSearch IP
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        line: "network.host: 10.172.0.17"
        create: yes

    - name: Add ElasticSearch Port
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        line: "http.port: 9200"
        create: yes

    - name: ensure ElasticSearch is running
      service:
        name: elasticsearch
        state: started
        enabled: true

# INSTALL NGINX #############################################

    - name: Install Nginx
      apt:
        name:
          - nginx
        state: present

    - name: ensure Kibana is running
      service:
        name: nginx
        state: started
        enabled: true

# INSTALL KIBANA #############################################

    - name: Install Kibana
      apt:
        name:
          - kibana
        state: present

    - name: ensure Kibana is running
      service:
        name: kibana
        state: started
        enabled: true

# INSTALL LOGSTASH #############################################

    - name: Install LogStash
      apt:
        name:
          - logstash
        state: present

    - name: ensure LogStash is running
      service:
        name: logstash
        state: started
        enabled: true

# INSTALL Filebeat #############################################

    - name: Install Filebeat
      apt:
        name:
          - filebeat
        state: present

    - name: ensure Kibana is running
      service:
        name: filebeat
        state: started
        enabled: true

# ElasticSearch FIREWALL ######################################

    - name: Enable UFW And Deny All
      ufw:
        state: enabled
        policy: deny

    - name: Set Logging
      ufw:
        logging: 'on'

    - name: Allow SSH
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow ElasticSearch tcp port 9200
      ufw:
        rule: allow
        port: '9200'
        proto: tcp